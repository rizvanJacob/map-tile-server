plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri("https://repo.osgeo.org/repository/release/")
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.postgresql:postgresql:42.7.3'
	implementation "org.locationtech.jts:jts-core:1.19.0"
	implementation "org.n52.jackson:jackson-datatype-jts:1.2.10"
	implementation "org.hibernate.orm:hibernate-spatial:6.4.4.Final"

//	implementation 'org.geotools:gt-geojson:33.1'       // Optional: convert geometry to GeoJSON if needed
	implementation('org.geotools:gt-shapefile:33.1') {
		exclude group: 'javax.media', module: 'jai_core'
	}
	implementation('org.geotools:gt-main:33.1') {
		exclude group: 'javax.media', module: 'jai_core'
	}
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
